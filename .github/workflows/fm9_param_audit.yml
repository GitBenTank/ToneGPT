name: FM9 Parameter Audit

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  param_audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build blocks_featured
      run: |
        python tools/build_blocks_featured.py
        test -s data/blocks_featured.json
        
    - name: Validate completeness (non-blocking)
      run: |
        python - <<'PY'
        import json, sys
        from pathlib import Path
        
        # Load source and output data
        src = json.loads(Path("tonegpt/core/blocks_with_footswitch.json").read_text())
        out = json.loads(Path("data/blocks_featured.json").read_text())
        
        # Count models
        src_models = len(src)  # src is an array of blocks
        out_models = sum(len(b["models"]) for b in out["blocks"])
        
        print(f"Source blocks: {src_models}")
        print(f"Output models: {out_models}")
        
        if out_models < src_models:
            print(f"‚ö†Ô∏è  WARNING: some models missing in output ({out_models}/{src_models})")
            # Don't fail the build, just warn
        else:
            print("‚úÖ OK: all models represented")
            
        # Check for blocks with no featured parameters
        for block in out["blocks"]:
            if not block["featured_parameters"]:
                print(f"‚ö†Ô∏è  WARNING: {block['block']} has no featured parameters")
        PY
        
    # - name: Run FM9 Parameter Audit
    #   run: |
    #     python fm9_param_audit.py \
    #       --blocks data/blocks_with_footswitch.json \
    #       --cfg data/fm9_config.json \
    #       --ref data/fm9_comprehensive_reference.json \
    #       --out report/fm9_param_audit.md
          
    - name: Upload audit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: fm9-param-audit-report
        path: report/fm9_param_audit.md
        
    - name: Comment PR with audit results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          const reportPath = 'report/fm9_param_audit.md';
          if (fs.existsSync(reportPath)) {
            const report = fs.readFileSync(reportPath, 'utf8');
            
            // Extract compliance status
            const complianceMatch = report.match(/## (‚úÖ|‚ùå) Compliance Status: (PASSED|FAILED)/);
            const status = complianceMatch ? complianceMatch[2] : 'UNKNOWN';
            
            const comment = `## üîç FM9 Parameter Audit Results
            
            **Status:** ${status}
            
            <details>
            <summary>View full audit report</summary>
            
            \`\`\`markdown
            ${report}
            \`\`\`
            
            </details>
            
            ${status === 'FAILED' ? '‚ùå **This PR cannot be merged until all parameter audit issues are resolved.**' : '‚úÖ **All parameters are properly sourced from FM9 reference files.**'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
          
    # - name: Fail if audit failed
    #   if: failure()
    #   run: |
    #     echo "‚ùå FM9 Parameter Audit failed. Please fix all compliance issues before merging."
    #     echo "Check the audit report for details on missing parameters and other issues."
    #     exit 1
